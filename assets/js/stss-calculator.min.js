(function(){'use strict';const form=document.getElementById('stssCalculatorForm');if(!form)return;const cssPaceInput=document.getElementById('cssPace');const durationInput=document.getElementById('workoutDuration');const avgPaceInput=document.getElementById('avgPace');const calculateBtn=document.getElementById('calculateStssBtn');const resetBtn=document.getElementById('resetStssBtn');const resultsDiv=document.getElementById('stssResults');const stssValue=document.getElementById('stssValue');const intensityFactor=document.getElementById('intensityFactor');const interpretation=document.getElementById('stssInterpretation');function paceToSeconds(paceString){const parts=paceString.split(':');if(parts.length!==2)return null;const minutes=parseInt(parts[0],10);const seconds=parseInt(parts[1],10);if(isNaN(minutes)||isNaN(seconds))return null;if(seconds<0||seconds>59)return null;if(minutes<0||minutes>10)return null;return(minutes*60)+seconds;}
function secondsToPace(totalSeconds){const minutes=Math.floor(totalSeconds/60);const seconds=Math.round(totalSeconds%60);return`${minutes}:${seconds.toString().padStart(2,'0')}`;}
function calculateStss(cssPaceSeconds,durationMinutes,avgPaceSeconds){const intensityFactor=cssPaceSeconds/avgPaceSeconds;const durationHours=durationMinutes/60;const stss=durationHours*Math.pow(intensityFactor,2)*100;return{stss:Math.round(stss),intensityFactor:intensityFactor.toFixed(3)};}
function getStssInterpretation(stss,intensityFactor){let load,recovery,description;if(stss<50){load='Low';recovery='same day';description='Light recovery or technique session';}else if(stss<100){load='Moderate';recovery='1 day';description='Standard aerobic endurance workout';}else if(stss<200){load='High';recovery='1-2 days';description='Challenging threshold or race pace session';}else if(stss<300){load='Very High';recovery='2-3 days';description='Hard training block or long race effort';}else{load='Extreme';recovery='3+ days';description='Ultra-endurance or multi-hour race';}
const ifDescription=intensityFactor>1.05?'(faster than CSS - high intensity)':intensityFactor>0.95?'(near CSS pace - threshold)':intensityFactor>0.85?'(moderate aerobic pace)':'(easy aerobic pace)';return`<strong>${load}training load</strong>${ifDescription}.Estimated recovery:${recovery}.${description}.`;}
function validateInput(input,errorDiv,label){const value=input.value.trim();if(!value){errorDiv.textContent=`${label}is required`;errorDiv.style.display='block';return false;}
if(input.type==='text'&&input.id.includes('Pace')){const seconds=paceToSeconds(value);if(!seconds){errorDiv.textContent='Invalid format. Use mm:ss (e.g., 1:49)';errorDiv.style.display='block';return false;}}else if(input.type==='number'){const num=parseInt(value,10);if(isNaN(num)||num<1||num>300){errorDiv.textContent='Enter a value between 1 and 300 minutes';errorDiv.style.display='block';return false;}}
errorDiv.style.display='none';return true;}
form.addEventListener('submit',function(e){e.preventDefault();document.querySelectorAll('.form-error').forEach(err=>err.style.display='none');const cssPaceValid=validateInput(cssPaceInput,document.getElementById('cssPace-error'),'CSS Pace');const durationValid=validateInput(durationInput,document.getElementById('duration-error'),'Duration');const avgPaceValid=validateInput(avgPaceInput,document.getElementById('pace-error'),'Average Pace');if(!cssPaceValid||!durationValid||!avgPaceValid){return;}
const cssPaceSeconds=paceToSeconds(cssPaceInput.value.trim());const durationMinutes=parseInt(durationInput.value.trim(),10);const avgPaceSeconds=paceToSeconds(avgPaceInput.value.trim());const result=calculateStss(cssPaceSeconds,durationMinutes,avgPaceSeconds);stssValue.textContent=result.stss;intensityFactor.textContent=result.intensityFactor;interpretation.innerHTML=getStssInterpretation(result.stss,parseFloat(result.intensityFactor));resultsDiv.style.display='block';resultsDiv.scrollIntoView({behavior:'smooth',block:'nearest'});try{localStorage.setItem('swimanalytics_last_stss',JSON.stringify({cssPace:cssPaceInput.value.trim(),duration:durationMinutes,avgPace:avgPaceInput.value.trim(),stss:result.stss,if:result.intensityFactor,date:new Date().toISOString()}));}catch(e){}});resetBtn.addEventListener('click',function(){resultsDiv.style.display='none';document.querySelectorAll('.form-error').forEach(err=>err.style.display='none');});try{const saved=localStorage.getItem('swimanalytics_last_stss');if(saved){const data=JSON.parse(saved);cssPaceInput.value=data.cssPace||'';}}catch(e){}})();